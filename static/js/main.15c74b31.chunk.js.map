{"version":3,"sources":["data/sounds-constants.js","components/Display.jsx","components/Switches.jsx","components/Slider.jsx","components/Pad.jsx","components/Drumpad.jsx","App.js","serviceWorker.js","index.js"],"names":["sounds","Heater kit","name","shortcut","link","Smooth piano kit","Display","props","react_default","a","createElement","className","type","disabled","value","display","id","Switch","onChange","onSwitch","Slider","min","max","volume","onInput","onSlide","Pad","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleKeyDown","bind","assertThisInitialized","document","addEventListener","removeEventListener","e","key","letter","handleClick","_this2","toUpperCase","onClick","src","React","Component","Drumpad","bank","map","d","components_Pad","App","_getPrototypeOf2","_len","arguments","length","Array","_key","apply","concat","state","power","handleOnSlide","handleSwitchPower","handleSwitchBank","setState","playSound","sound","getElementById","currentTime","play","event","target","checked","components_Display","Switches","components_Slider","components_Drumpad","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAAMA,SAAQ,CACVC,aAAc,CACV,CACIC,KAAO,WACPC,SAAW,IACXC,KAAM,4DAEV,CACIF,KAAM,WACNC,SAAU,IACVC,KAAM,4DAEV,CACIF,KAAM,WACNC,SAAU,IACVC,KAAM,4DAEV,CACIF,KAAM,WACNC,SAAU,IACVC,KAAM,8DAEV,CACIF,KAAM,OACNC,SAAU,IACVC,KAAM,4DAEV,CACIF,KAAM,UACNC,SAAU,IACVC,KAAM,0DAGV,CACIF,KAAM,cACNC,SAAU,IACVC,KAAM,8DAEV,CACIF,KAAM,OACNC,SAAU,IACVC,KAAM,8DAEV,CACIF,KAAM,YACNC,SAAU,IACVC,KAAM,2DAGdC,mBAAoB,CAChB,CACIH,KAAM,UACNC,SAAU,IACVC,KAAM,2DAEV,CACIF,KAAM,UACNC,SAAU,IACVC,KAAM,2DAEV,CACIF,KAAM,UACNC,SAAU,IACVC,KAAM,2DAEV,CACIF,KAAM,SACNC,SAAU,IACVC,KAAM,mEAEV,CACIF,KAAM,UACNC,SAAU,IACVC,KAAM,2DAEV,CACIF,KAAM,YACNC,SAAU,IACVC,KAAM,0DAEV,CACIF,KAAM,cACNC,SAAU,IACVC,KAAM,iEAEV,CACIF,KAAM,aACNC,SAAU,IACVC,KAAM,gEAEV,CACIF,KAAM,QACNC,SAAU,IACVC,KAAM,8DCjFHE,EAVC,SAAAC,GAAK,OACnBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SACEE,KAAM,OACNC,UAAU,EACVC,MAAOP,EAAMQ,QACbC,GAAI,cCUKC,EAfA,SAACV,GAAD,OAEPC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SACAE,KAAK,WACLM,SAAUX,EAAMY,WAEhBX,EAAAC,EAAAC,cAAA,QACAC,UAAU,eACVK,GAAIT,EAAMS,OCGPI,EAbA,SAACb,GAAD,OACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,SACEE,KAAK,QACLS,IAAI,IACJC,IAAI,MACJR,MAAOP,EAAMgB,OACbZ,UAAU,SACVK,GAAG,UACHQ,QAASjB,EAAMkB,YC0BNC,cAlCX,SAAAA,EAAYnB,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMvB,KACD2B,cAAgBP,EAAKO,cAAcC,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFNA,mFAMfU,SAASC,iBAAiB,UAAWR,KAAKI,8DAG1CG,SAASE,oBAAoB,UAAWT,KAAKI,qDAEnCM,GACNA,EAAEC,MAAQX,KAAKvB,MAAMmC,QACvBZ,KAAKvB,MAAMoC,YAAYb,KAAKvB,wCAGzB,IAAAqC,EAAAd,KACL,OACEtB,EAAAC,EAAAC,cAAA,UACEM,GAAIc,KAAKvB,MAAMmC,OAAOG,cACtBlC,UAAU,WACVmC,QAAS,kBAAMF,EAAKrC,MAAMoC,YAAYC,EAAKrC,SAC1CuB,KAAKvB,MAAMmC,OAAOG,cACnBrC,EAAAC,EAAAC,cAAA,SAAOM,GAAIc,KAAKvB,MAAMmC,OAClB/B,UAAU,OACVoC,IAAKjB,KAAKvB,MAAMwC,cA1BdC,IAAMC,WCiBTC,EAdC,SAAA3C,GAAK,OAEjBC,EAAAC,EAAAC,cAAA,OAAKM,GAAG,gBACJR,EAAAC,EAAAC,cAAA,WAAMH,EAAM4C,KAAKC,IAAI,SAAAC,GAAC,OACpB7C,EAAAC,EAAAC,cAAC4C,EAAD,CACEb,IAAKY,EAAEnD,KACPc,GAAIqC,EAAEnD,KACNwC,OAAQW,EAAElD,SACV4C,IAAKM,EAAEjD,KACPuC,YAAapC,EAAMoC,mBCgEhBY,cArEb,SAAAA,IAAsB,IAAAC,EAAA7B,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyB,GAAA,QAAAE,EAAAC,UAAAC,OAAPpD,EAAO,IAAAqD,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPtD,EAAOsD,GAAAH,UAAAG,GAAA,OACpBlC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,MAAA0B,EAAA5B,OAAAI,EAAA,EAAAJ,CAAA2B,IAAAtB,KAAA6B,MAAAN,EAAA,CAAA1B,MAAAiC,OAASxD,MACJyD,MAAQ,CACXC,OAAO,EACPd,KAAK,mBACLpC,QAAS,wBACTQ,OAAQ,IAEVI,EAAKuC,cAAgBvC,EAAKuC,cAAc/B,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKwC,kBAAoBxC,EAAKwC,kBAAkBhC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKyC,iBAAmBzC,EAAKyC,iBAAiBjC,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKgB,YAAchB,EAAKgB,YAAYR,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAXCA,2EAaVpB,IACc,IAArBuB,KAAKkC,MAAMC,QACdnC,KAAKuC,SAAS,CACZtD,QAASR,EAAMS,KAEjBc,KAAKwC,UAAU/D,EAAMmC,2CAEb1B,GACR,IAAMuD,EAAQlC,SAASmC,eAAexD,GACtCuD,EAAME,YAAc,EACpBF,EAAMhD,OAASO,KAAKkC,MAAMzC,OAAO,IACjCgD,EAAMG,iDAEUC,GAChB7C,KAAKuC,SAAS,CACZJ,MAAOU,EAAMC,OAAOC,QACpB9D,QAAS4D,EAAMC,OAAOC,QAAU,KAAO,iDAG1BF,IACS,IAArB7C,KAAKkC,MAAMC,OACdnC,KAAKuC,SAAS,CACZlB,KAAMwB,EAAMC,OAAOC,QAAU,aAAc,mBAC3C9D,QAAS4D,EAAMC,OAAOC,QAAU,aAAc,2DAGpCF,GACZ7C,KAAKuC,SAAS,CACZ9C,OAAOoD,EAAMC,OAAO9D,MACpBC,QAAQ4D,EAAMC,OAAO9D,yCAIvB,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACoE,EAAD,CAAS/D,QAASe,KAAKkC,MAAMjD,UAC7BP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACqE,EAAD,CACE/D,GAAG,cACHd,KAAK,QACLiB,SAAUW,KAAKqC,oBACjB3D,EAAAC,EAAAC,cAACqE,EAAD,CACE/D,GAAG,aACHd,KAAK,OACLiB,SAAUW,KAAKsC,oBAEnB5D,EAAAC,EAAAC,cAACsE,EAAD,CACAlE,MAAOgB,KAAKkC,MAAMzC,OAClBE,QAASK,KAAKoC,gBACd1D,EAAAC,EAAAC,cAACuE,EAAD,CACE9B,KAA0B,eAApBrB,KAAKkC,MAAMb,KAAuBnD,EAAO,cAAeA,EAAO,oBACrE2C,YAAab,KAAKa,sBAjEVM,aCIEiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASpD,SAASmC,eAAe,SD0H3C,kBAAmBkB,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.15c74b31.chunk.js","sourcesContent":["const sounds ={\n    \"Heater kit\": [\n        {\n            name : \"Heater-1\",\n            shortcut : \"q\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\"\n        },\n        {\n            name: \"Heater-2\",\n            shortcut: \"w\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\"\n        },\n        {\n            name: \"Heater-3\",\n            shortcut: \"e\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\"\n        },\n        {\n            name: \"Heater-4\",\n            shortcut: \"a\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\"\n        },\n        {\n            name: \"Clap\",\n            shortcut: \"s\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\"\n        },\n        {\n            name: \"Open-HH\",\n            shortcut: \"d\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n\n        },\n        {\n            name: \"Kick-n'-Hat\",\n            shortcut: \"z\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\"\n        },\n        {\n            name: \"Kick\",\n            shortcut: \"x\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\"\n        },\n        {\n            name: \"Closed-HH\",\n            shortcut: \"c\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\n        },\n    ],\n    \"Smooth piano kit\": [\n        {\n            name: \"Chord-1\",\n            shortcut: \"q\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\"\n        },\n        {\n            name: \"Chord-2\",\n            shortcut: \"w\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\"\n        },\n        {\n            name: \"Chord-3\",\n            shortcut: \"e\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\"\n        },\n        {\n            name: \"Shaker\",\n            shortcut: \"a\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\"\n        },\n        {\n            name: \"Open-HH\",\n            shortcut: \"s\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\"\n        },\n        {\n            name: \"Closed-HH\",\n            shortcut: \"d\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\"\n        },\n        {\n            name: \"Punchy-Kick\",\n            shortcut: \"z\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\"\n        },\n        {\n            name: \"Side-Stick\",\n            shortcut: \"x\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\"\n        },\n        {\n            name: \"Snare\",\n            shortcut: \"c\",\n            link: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\"\n        },\n    ]\n}\nconst MODE_NAMES = {\n    true: \"Heater kit\",\n    false: \"Smooth piano kit\"\n}\n\nexport {\n    sounds,\n    MODE_NAMES\n};","import React from \"react\";\n\nconst Display = props => (\n  <div className=\"display\">\n    <input\n      type={\"text\"}\n      disabled={true}\n      value={props.display}\n      id={\"display\"}\n    />\n  </div>\n);\nexport default Display","import React from \"react\"\n\n\nconst Switch = (props) => (\n    \n        <label className=\"switch\">\n            <input \n            type=\"checkbox\"\n            onChange={props.onSwitch}\n            />\n            <span\n            className=\"sliderSwitch\"\n            id={props.id}></span>\n        </label>\n        \n    \n)\n\nexport default Switch","import React from \"react\"\n\nconst Slider = (props) => (\n  <div className=\"slidecontainer\">\n    <input\n      type=\"range\"\n      min=\"0\"\n      max=\"100\"\n      value={props.volume}\n      className=\"slider\"\n      id=\"myRange\"\n      onInput={props.onSlide}\n    />\n  </div>\n)\nexport default Slider","import React from \"react\"\n\nclass Pad extends React.Component {\n    constructor(props) {\n        super(props)\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        // this.playSound = this.playSound.bind(this);\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.handleKeyDown);\n    }\n    handleKeyDown(e){\n        if (e.key === this.props.letter) {\n          this.props.handleClick(this.props);\n        }\n      }\n    render() {\n        return(\n          <button\n            id={this.props.letter.toUpperCase()}\n            className='drum-pad'\n            onClick={() => this.props.handleClick(this.props)}>\n            {this.props.letter.toUpperCase()}\n            <audio id={this.props.letter}\n                className='clip'\n                src={this.props.src}>\n            </audio>\n            </button>\n     )   \n        \n    }\n\n\n}\nexport default Pad\n\n\n\n// const Pad = props => (\n//     <button\n//         className='drum-pad'\n//         onClick={() => props.handleClick(props)}\n//         onKeyDown={() => props.handleKeyDown(props)}\n//         >\n//         {props.letter}\n//         <audio id={props.letter}\n//             className='clip'\n//             src={props.src}>\n//         </audio>\n//     </button>\n// )\n// export default Pad\n/* ref={ref => this.audio = ref}> */","import React from \"react\"\nimport Pad from '../components/Pad.jsx'\n// import {sounds, MODE_NAMES} from '../data/sounds-constants.js'\n\n\nconst Drumpad = props => (\n    \n    <div id='drum-machine'>\n        <div>{props.bank.map(d => (\n          <Pad\n            key={d.name}\n            id={d.name}\n            letter={d.shortcut}\n            src={d.link}\n            handleClick={props.handleClick}/>   \n         ))}\n        </div>\n    </div>\n)\nexport default Drumpad","import React, { Component } from \"react\"\nimport \"./App.css\"\nimport {sounds} from './data/sounds-constants.js'\nimport Display from \"./components/Display\"\nimport Switch from \"./components/Switches\"\nimport Slider from \"./components/Slider\"\nimport Drumpad from \"./components/Drumpad\"\n\nclass App extends Component {\n  constructor(...props) {\n    super(...props);\n    this.state = {\n      power: false,\n      bank:\"Smooth piano kit\",\n      display: \"Pulsa cualquier tecla\",\n      volume: 30\n    };\n    this.handleOnSlide = this.handleOnSlide.bind(this)\n    this.handleSwitchPower = this.handleSwitchPower.bind(this)\n    this.handleSwitchBank = this.handleSwitchBank.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n  }\n  handleClick(props) {\n    if(this.state.power === true){\n    this.setState({\n      display: props.id\n    })\n    this.playSound(props.letter)}\n  }\n  playSound(id){\n    const sound = document.getElementById(id);\n    sound.currentTime = 0;\n    sound.volume = this.state.volume/100;\n    sound.play();\n  }\n  handleSwitchPower(event) {\n    this.setState({\n      power: event.target.checked,\n      display: event.target.checked ? \"On\" : \"Off\"\n    })\n  }\n  handleSwitchBank(event) {\n    if(this.state.power === true) {\n    this.setState({\n      bank: event.target.checked ? \"Heater kit\": \"Smooth piano kit\",\n      display: event.target.checked ? \"Heater kit\": \"Smooth piano kit\"\n    })}\n  }\n  handleOnSlide(event) {\n    this.setState({\n      volume:event.target.value,\n      display:event.target.value\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Display display={this.state.display} />\n        <div className=\"Switches\">\n          <Switch\n            id=\"switchPower\"\n            name=\"power\"\n            onSwitch={this.handleSwitchPower}/>\n          <Switch\n            id=\"switchBank\"\n            name=\"bank\"\n            onSwitch={this.handleSwitchBank}/>\n        </div>\n        <Slider\n        value={this.state.volume}\n        onSlide={this.handleOnSlide} />\n        <Drumpad \n          bank={this.state.bank === \"Heater kit\"? sounds[\"Heater kit\"]: sounds[\"Smooth piano kit\"]}\n          handleClick={this.handleClick}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}